name: "Check Online Version"
on:
  workflow_dispatch:
  schedule:
  - cron: "0 6 * * *"
env:
  FLUTTER_PROJECT_NAME: flutter-cmake # Dockerhub project
jobs:
  get_versions:
    name: Get Versions
    runs-on: ubuntu-latest
    outputs:
      current_flutter_image_version: ${{ steps.read_version.outputs.version }}
      latest_flutter_image_version: ${{ steps.latest_versions.outputs.tag }}
    steps:
    - uses: actions/checkout@v2
    - name: Get Current Release
      id: latest_versions
      run: |
        sudo chmod +x ./manifest/scripts/dockertags.sh
        content="$(./manifest/scripts/dockertags.sh cirrusci/flutter | sed 's/^v//' | grep -P '^(\d{1,}\.){2}\d{1,}$' | sort)"
        content="${content//'%'/'%25'}"
        content="${content//$'\n'/'%0A'}"
        content="${content//$'\r'/'%0D'}"
        echo "::set-output name=tag::$content"
        
    - name: Log latest image Tag
      run: |
        echo "Latest Image Tag - ${{ steps.latest_versions.outputs.tag }}"

    - name: Read Version
      id: read_version
      run: |
        sudo chmod +x ./manifest/scripts/githubtags.sh
        content="$(./manifest/scripts/githubtags.sh daanh432/flutter-cmake | sed 's/^v//' | grep -P '^(\d{1,}\.){2}\d{1,}$' | sort)"
        content="${content//'%'/'%25'}"
        content="${content//$'\n'/'%0A'}"
        content="${content//$'\r'/'%0D'}"
        echo "::set-output name=version::$content"
        
    - name: Log current image Tag
      run: |
        echo "Current Image Tag - ${{ steps.read_version.outputs.version }}"

  update_versions:
    name: Update version.txt
    runs-on: ubuntu-latest
    needs: get_versions
    outputs:
      version: ${{ steps.version_fetcher.outputs.version }}
    if: needs.get_versions.outputs.latest_flutter_image_version != needs.get_versions.outputs.current_flutter_image_version
    steps:
    - uses: actions/checkout@v2
    - name: Commit version updates to repo
      run: |
        git config user.name github-actions
        git config user.email github-actions@github.com
        echo -e "${{ needs.get_versions.outputs.latest_flutter_image_version }}" > ./manifest/versions.txt
        echo -e "${{ needs.get_versions.outputs.current_flutter_image_version }}" > ./manifest/supported_versions.txt
        comm -23 ./manifest/versions.txt ./manifest/supported_versions.txt | sort -Vr > ./manifest/unprocessed_versions.txt
        git add .
        git commit -m "Automatically updated versions."
        git push
    - name: Get the latest version from the file
      id: version_fetcher
      run: echo "::set-output name=version::$(cat ./manifest/unprocessed_versions.txt | sort -Vr | head -n 1)"
  
  request-flutter-image-build:
    needs: update_versions
    uses: ./.github/workflows/update-flutter-cmake-image.yml
    with:
      version: ${{ needs.update_versions.outputs.version }}
